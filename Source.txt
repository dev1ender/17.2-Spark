
--problem 1.1
--read the fikle using textFile reader of sc context 
var dataRdd = sc.textFile("/user/cloudera/17.2/17.2_Dataset.txt")

--create the tuple of the od the data
var tuple = dataRdd.map(x=> {
val row = x.split(",").toList
(row.apply(0),row.apply(1),row.apply(2),row.apply(3).toInt,row.apply(4).toInt)
})

--problem 1.2
--count the no of the no of rows
val RowCount = tuple.count

--problem 1.3
--count the no of distinct subject
val subjectCount = tuple.map(x => x._2).distinct.count


--problem 1.4
--count the no of student in the school whose name is Mathew andmarks is 55
val StudentCount = tuple.map(x => (x._1,x._2,x._4)).filter(x=>x._1 == "Mathew" && x._3 ==55).count

--problem 2.1
--count the no of student per grade in the school
val CountGrade = tuple.map(x => (x._3,x._1)).distinct.map(x=>(x._1,1)).reduceByKey((x,y)=>x+y)
CountGrade.foreach(println)

--problem 2.2
-- average of the each student 
val AverageRdd = tuple.map(x=> ((x._3,x._1),(x._4+x._5)).groupByKey.map(x => (x._1,(x._2.sum.toDouble/(x._2.size*2))))
